<Window x:Class="VineCorrupt.WinHotkeys"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Hotkeys" Height="340" Width="300" ResizeMode="NoResize" ShowInTaskbar="False" WindowStartupLocation="CenterOwner" Topmost="True">

    <Window.Resources>
        <ResourceDictionary>
            <Style TargetType="{x:Type Button}">
                <Setter Property="Background" Value="#222"/>
                <Setter Property="Foreground" Value="#eee"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border 
                                   x:Name="Border"  
                                   CornerRadius="2" 
                                   BorderThickness="1"
                                   Background="#222"
                                   BorderBrush="#eee">
                                <ContentPresenter 
                                     Margin="2"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     RecognizesAccessKey="True"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#aaa" />
                                </Trigger>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#eee" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#FF93EC27" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="#111" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#eee" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#999" />
                                    <Setter Property="Foreground" Value="#ccc"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type TextBox}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="AllowDrop" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border 
                                Name="Border"
                                CornerRadius="2" 
                                Padding="2"
                                Background="#222"
                                BorderBrush="#eee"
                                BorderThickness="1" >
                                <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="#222"/>
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#eee"/>
                                    <Setter Property="Foreground" Value="#eee"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#FF93EC27"/>
                                    <Setter Property="Foreground" Value="#eee"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type Label}">
                <Setter Property="Foreground" Value="#eee"/>
            </Style>

            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="Background" Value="#282828"/>
                <Setter Property="Foreground" Value="#eee"/>
            </Style>

            <Style TargetType="{x:Type RichTextBox}">
                <Setter Property="Background" Value="#282828"/>
                <Setter Property="Foreground" Value="#eee"/>
            </Style>

            <Style TargetType="{x:Type CheckBox}">
                <Setter Property="Foreground" Value="#eee"/>
            </Style>

            <Style TargetType="{x:Type RadioButton}">
                <Setter Property="Foreground" Value="#eee"/>
            </Style>

            <Style TargetType="{x:Type GroupBox}">
                <Setter Property="Foreground" Value="#eee"/>
            </Style>

            <Style TargetType="{x:Type TreeView}">
                <Setter Property="Background" Value="#222"/>
                <Setter Property="Foreground" Value="#eee"/>
            </Style>

            <Style TargetType="{x:Type ListBox}">
                <Setter Property="Background" Value="#222"/>
                <Setter Property="Foreground" Value="#eee"/>
            </Style>

            <Style TargetType="{x:Type ListBoxItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Border x:Name="Bd"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="True">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                    </MultiTrigger.Conditions>

                                    <Setter TargetName="Bd" Property="Background" Value="#1F93EC27" />
                                    <Setter TargetName="Bd" Property="BorderBrush" Value="#A893EC27" />
                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="False" />
                                        <Condition Property="IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Bd" Property="Background" Value="#8F93EC27" />
                                    <Setter TargetName="Bd" Property="BorderBrush" Value="#FF93EC27" />
                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                                        <Condition Property="IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>

                                    <Setter TargetName="Bd" Property="Background" Value="#AF93EC27" />
                                    <Setter TargetName="Bd" Property="BorderBrush" Value="#FF93EC27" />
                                </MultiTrigger>

                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type TabControl}">
                <Setter Property="Background" Value="#282828"/>
            </Style>

            <Style TargetType="{x:Type TabItem}">
                <Setter Property="Background" Value="#282828"/>
                <Setter Property="Foreground" Value="#eee"/>
                <Setter Property="BorderThickness" Value="3" />
                <Setter Property="BorderBrush" Value="#FFEEEEEE" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Border>
                                <Grid>
                                    <Grid>
                                        <Border x:Name="Border" 
                                            CornerRadius="3,3,0,0"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1,0,1,1" />
                                    </Grid>
                                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                                        Padding="{TemplateBinding Padding}">
                                        <ContentPresenter ContentSource="Header"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    </Border>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#FF93EC27"/>
                                    <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,1"/>
                                </Trigger>
                                <Trigger Property="IsSelected"
                                     Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#FF93EC27" />
                                    <Setter TargetName="Border" Property="BorderThickness" Value="1,5,1,1" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <Grid Background="#222" Margin="0,0,0,0">
        <Label Content="Corrupt" HorizontalAlignment="Left" Margin="3,10,0,0" VerticalAlignment="Top" ToolTip="Corrupts the rom with the current settings and runs the emulator if available." Height="26" Width="51" Grid.Column="1"/>
        <Label Content="Increase Step Size" HorizontalAlignment="Left" Margin="3,38,0,0" VerticalAlignment="Top" ToolTip="Increases the step variable by one." Height="26" Width="105" Grid.Column="1"/>
        <Label Content="Decrease Step Size" HorizontalAlignment="Left" Margin="3,69,0,0" VerticalAlignment="Top" ToolTip="Decreases the step variable by one." Height="26" Width="109" Grid.Column="1"/>
        <Label Content="Increase Value" HorizontalAlignment="Left" Margin="3,100,0,0" VerticalAlignment="Top" ToolTip="Increases the currently selected corruption type's variable by one." Height="26" Width="86" Grid.Column="1"/>
        <Label Content="Decrease Value" HorizontalAlignment="Left" Margin="3,131,0,0" VerticalAlignment="Top" ToolTip="Decreases the currently selected corruption type's variable by one." Height="26" Width="91" Grid.Column="1"/>
        <Label Content="Change Type" HorizontalAlignment="Left" Margin="3,162,0,0" VerticalAlignment="Top" ToolTip="Changes the currently selected corruption type." Height="26" Width="79" Grid.Column="1"/>

        <TextBox x:Name="txtCorrupt" HorizontalAlignment="Right" Height="23" TextWrapping="Wrap" VerticalAlignment="Top" Width="150" KeyDown="TextBox_KeyDown" Margin="0,10,5,0" Grid.Column="1" LostFocus="TextBox_LostFocus"/>
        <TextBox x:Name="txtIncStep" HorizontalAlignment="Right" Height="23" TextWrapping="Wrap" VerticalAlignment="Top" Width="150" KeyDown="TextBox_KeyDown" Margin="0,41,5,0" Grid.Column="1" LostFocus="TextBox_LostFocus"/>
        <TextBox x:Name="txtDecStep" HorizontalAlignment="Right" Height="23" TextWrapping="Wrap" VerticalAlignment="Top" Width="150" KeyDown="TextBox_KeyDown" Margin="0,72,5,0" Grid.Column="1" LostFocus="TextBox_LostFocus"/>
        <TextBox x:Name="txtIncValue" HorizontalAlignment="Right" Height="23" TextWrapping="Wrap" VerticalAlignment="Top" Width="150" KeyDown="TextBox_KeyDown" Margin="0,103,5,0" Grid.Column="1" LostFocus="TextBox_LostFocus"/>
        <TextBox x:Name="txtDecValue" HorizontalAlignment="Right" Height="23" TextWrapping="Wrap" VerticalAlignment="Top" Width="150" KeyDown="TextBox_KeyDown" Margin="0,134,5,0" Grid.Column="1" LostFocus="TextBox_LostFocus"/>
        <TextBox x:Name="txtChangeCorruption" HorizontalAlignment="Right" Height="23" TextWrapping="Wrap" VerticalAlignment="Top" Width="150" KeyDown="TextBox_KeyDown" Margin="0,165,5,0" Grid.Column="1" LostFocus="TextBox_LostFocus"/>
        <Button Content="Help" HorizontalAlignment="Left" Margin="7,279,0,0" VerticalAlignment="Top" Width="277" Click="Button_Click"/>
        <Label Content="Change Type" HorizontalAlignment="Left" Margin="3,162,0,0" VerticalAlignment="Top" ToolTip="Changes the currently selected corruption type." Height="26" Width="79"/>
        <TextBox x:Name="txtChangeCorruption_Copy" HorizontalAlignment="Right" Height="23" TextWrapping="Wrap" VerticalAlignment="Top" Width="150" KeyDown="TextBox_KeyDown" Margin="0,165,5,0" LostFocus="TextBox_LostFocus"/>

    </Grid>
</Window>
